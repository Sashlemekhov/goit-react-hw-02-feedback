{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Counter/Counter.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Counter/Counter.module.css","components/Notification/Notification.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","styles","statFlexContainer","statBlockContainer","secondHeader","statList","positivePercentNumb","positivePercent","positivePercentLabel","FeedbackOptions","onLeaveFeedback","container","type","id","greenBtn","onClick","orangeBtn","redBtn","Notification","message","text","Counter","state","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","num","Math","round","mainHeader","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.77f27efc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n      <div className={styles.statFlexContainer}>\r\n        <div className={styles.statBlockContainer}>\r\n          <h2 className={styles.secondHeader}>Statistics</h2>\r\n          <ul className={styles.statList}>\r\n            <li>Good: { good }</li>\r\n            <li>Neutral: { neutral }</li>\r\n            <li>Bad: { bad }</li>\r\n            <li>Total: { total }</li>\r\n          </ul>\r\n        </div>  \r\n        <div className={styles.statBlockContainer}>\r\n          <p className={styles.positivePercentNumb}>{ positivePercentage }<span className={styles.positivePercent}>%</span></p>\r\n          <p className={styles.positivePercentLabel}>Positive feedback</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nexport default Statistics;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <button type=\"button\" id=\"good\" className={styles.greenBtn} onClick={onLeaveFeedback}>Good</button>\r\n      <button type=\"button\" id=\"neutral\" className={styles.orangeBtn} onClick={onLeaveFeedback}>Neutral</button>\r\n      <button type=\"button\" id=\"bad\" className={styles.redBtn} onClick={onLeaveFeedback}>Bad</button>\r\n    </div>\r\n  )\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <p className={styles.text}>{message}</p>\r\n  )\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport Statistics from '../Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Notification from '../Notification';\r\nimport styles from './Counter.module.css';\r\n\r\nclass Counter extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  }\r\n\r\n  onLeaveFeedback = (e) => {\r\n\r\n    if (e.target.id === \"good\") {\r\n      this.setState((prevState) => {\r\n        return {\r\n          good: prevState.good + 1\r\n        }\r\n      });\r\n    };\r\n\r\n    if (e.target.id === \"neutral\") {\r\n      this.setState((prevState) => {\r\n        return {\r\n          neutral: prevState.neutral + 1\r\n        }\r\n      });\r\n    };\r\n\r\n    if (e.target.id === \"bad\") {\r\n      this.setState((prevState) => {\r\n        return {\r\n          bad: prevState.bad + 1\r\n        }\r\n      });\r\n    };\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return (this.state.good + this.state.neutral + this.state.bad);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    let num = (this.state.good / this.countTotalFeedback()) * 100;\r\n    return Math.round(num);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={styles.container}>\r\n          <h1 className={styles.mainHeader}>Please leave feedback</h1>\r\n          <FeedbackOptions\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n\r\n          {(this.state.good !== 0) || (this.state.neutral !== 0) || (this.state.bad !== 0) ? <Statistics\r\n            good={ this.state.good }\r\n            neutral={ this.state.neutral }\r\n            bad={ this.state.bad }\r\n            total={ this.countTotalFeedback() }\r\n            positivePercentage={ this.countPositiveFeedbackPercentage() }\r\n          /> : <Notification message={\"No feedback given...\"} />}\r\n        </div>\r\n        \r\n      </>  \r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n\r\n\r\n","import React from 'react';\nimport Counter from './components/Counter';\n\n\nconst App = () => (\n    <Counter />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statFlexContainer\":\"Statistics_statFlexContainer__6b4Rk\",\"statBlockContainer\":\"Statistics_statBlockContainer__39j2g\",\"secondHeader\":\"Statistics_secondHeader__xqHmc\",\"statList\":\"Statistics_statList__23lXc\",\"positivePercentNumb\":\"Statistics_positivePercentNumb__zcL-4\",\"positivePercent\":\"Statistics_positivePercent__yhz9S\",\"positivePercentLabel\":\"Statistics_positivePercentLabel__2wvx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__dJHhd\",\"btn\":\"FeedbackOptions_btn__1UGS7\",\"greenBtn\":\"FeedbackOptions_greenBtn__31C3h FeedbackOptions_btn__1UGS7\",\"orangeBtn\":\"FeedbackOptions_orangeBtn__3uP9n FeedbackOptions_btn__1UGS7\",\"redBtn\":\"FeedbackOptions_redBtn__2vs4v FeedbackOptions_btn__1UGS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Counter_container__1XDay\",\"mainHeader\":\"Counter_mainHeader__1HWQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2JxyZ\"};"],"sourceRoot":""}